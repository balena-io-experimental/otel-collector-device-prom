# Provides configuration for prometheus node exporter and docker stats receivers,
# which push data to a prometheus remote write backend.
#
# Requires env variables:
# * PROMETHEUS_USER -- ID for the user on the backend
# * PROMETHEUS_URL -- URL for the Prometheus backend
# * PROMETHEUS_PASSWORD -- API key for Prometheus
receivers:
  # Collect own metrics
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 60s
        static_configs:
        - targets: ['0.0.0.0:8888']
      - job_name: 'integrations/node_exporter'
        scrape_interval: 60s
        static_configs:
        - targets: ['localhost:9100']
        # Required for dashboards in Grafana Cloud
        relabel_configs:
        - source_labels: [ instance ]
          replacement: '${env:HOSTNAME}'
          target_label: instance
  docker_stats:
    endpoint: unix:///var/run/balena-engine.sock
    collection_interval: 60s
    timeout: 20s
    container_labels_to_metric_labels:
      io.balena.service-name: container_service_name
    env_vars_to_metric_labels:
      # Required for resource processor to generate 'container_device_short_uuid'
      BALENA_DEVICE_UUID: container_device_uuid

processors:
  batch:
  resource/docker:
    attributes:
      # Create short UUID for containers that do not have access to device hostname
      - key: "container_device_uuid"
        pattern: "^(?P<container_device_short_uuid>.{0,7}).*"
        action: extract
      # Create short UUID for balena Supervisor, which does not generate 'container_device_uuid'
      # because it does not define BALENA_DEVICE_UUID.
      - key: "container_device_short_uuid"
        action: insert
        value: ${env:HOSTNAME}

exporters:
  prometheusremotewrite:
    endpoint: https://${env:PROMETHEUS_USER}:${env:PROMETHEUS_PASSWORD}@${env:PROMETHEUS_URL}
    # Required for docker_stats
    resource_to_telemetry_conversion: 
      enabled: true

service:
  pipelines:
    metrics/prom:
      receivers: [prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite]
    metrics/dock:
      receivers: [docker_stats]
      processors: [batch, resource/docker]
      exporters: [prometheusremotewrite]
